.inputWithLabel-wrapper {
    top: 50%;
    left: 50%;
    position: absolute;
    --content: attr(data-label);
}

.inputWithLabel-wrapper::before {
    content: var(--content);
    top: 50%;
    left: 10%;
    transform: translateY(-50%);
    position: absolute;
    opacity: 0.4;
    pointer-events: none;
    background-color: white;
    padding: 5px;
    transition: all 0.2s ease-in-out;
}

.inputWithLabel-wrapper::after {
    content: "";
    position: absolute;
    top: 50%;
    right: 0;
    height: 60%;
    pointer-events: none;
    opacity: 0;
    aspect-ratio: 1;
    transform: translateY(-50%);
    transition: background-image 0.2s ease-in-out;
}

.inputWithLabel-wrapper:has(input:valid)::after {
    opacity: 1;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='green'%3E%3Cpath d='M20.285 6.709l-11.025 11.025-5.285-5.285 1.414-1.414 3.871 3.871 9.611-9.611z'/%3E%3C/svg%3E");
    background-size: contain;
    background-repeat: no-repeat;
}

.inputWithLabel-wrapper:has(input:invalid:not(:placeholder-shown))::after {
    opacity: 1;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='red'%3E%3Cpath d='M18.364 5.636l-1.414-1.414L12 9.172 7.05 4.222 5.636 5.636 10.586 10.586l-4.95 4.95 1.414 1.414L12 12l4.95 4.95 1.414-1.414-4.95-4.95z'/%3E%3C/svg%3E");
    background-size: contain;
    background-repeat: no-repeat;
}

.inputWithLabel-wrapper input {
    font-size: 16px;
    padding: 10px;
    border-radius: 5px;
    border: none;
    outline: 1px solid black;
}

.inputWithLabel-wrapper input:valid {
    transition: outline 0.2s ease-in-out;
    outline: 2px solid green;
}

.inputWithLabel-wrapper input:invalid:not(:placeholder-shown) {
    transition: outline 0.2s ease-in-out;
    outline: 2px solid red;
}

.inputWithLabel-wrapper:has(input:focus)::before {
    top: -2px;
    left: 10%;
    opacity: 1;
}

.inputWithLabel-wrapper:has(input:not(:placeholder-shown))::before {
    top: -2px;
    left: 10%;
    opacity: 1;
}



.inputWithLabel-wrapper:has(input:focus) .asterisk {
    top: -2px;
    left: calc(10% + 5px);
    opacity: 1;
}

.inputWithLabel-wrapper:has(input:not(:placeholder-shown)) .asterisk {
    top: -2px;
    left: calc(10% + 5px);
    opacity: 1;
}

.inputWithLabel-wrapper:has(input:required)::before {
    padding-left: 15px;
}

.inputWithLabel-wrapper .asterisk {
    color: red;
    position: absolute;
    top: 50%;
    left: calc(10% + 5px);
    transform: translateY(-50%);
    transition: all 0.2s ease-in-out;
}

.inputWithLabel-wrapper:not(:has(input:required)) .asterisk {
    display: none;
}